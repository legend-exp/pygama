name: pygama

on:
  push:
    branches:
      - main
      - refactor
      - 'releases/**'
  pull_request:
  merge_group:
  release:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-and-test:
    name: Test pygama with Python
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10']
        os: [ubuntu-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get dependencies and install the package
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install --upgrade .[test]
    - name: Run unit tests
      run: |
        pytest

  test-coverage:
    name: Calculate and upload test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Generate Report
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install --upgrade .[test]
          pytest --cov=pygama --cov-report=xml
      - name: Upload Coverage to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-docs:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Setup build environment
        run: |
          sudo apt-get install -y pandoc
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install --upgrade .[all]
      - name: Build docs for current ref
        run: |
          cd docs
          make clean
          make
